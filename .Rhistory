install.packages("shiny")
library(shiny)
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(123)
#reduce the number of samples to reduce the computing time
trainingind <- sample(x = 1:nrow(training), size = 2000, replace = F)
training <- training[trainingind,]
cntr <- colnames(training)
cnte <- colnames(testing)
cntr[which(!cntr %in% cnte)]
cnte[which(!cnte %in% cntr)]
training <- training[, -seq(from = 1, to = 8, by = 1)]
testing <- testing[, -seq(from = 1, to = 8, by = 1)]
training <- training[,colSums(is.na(testing)) < nrow(testing)]
testing <- testing[,colSums(is.na(testing)) < nrow(testing)]
library(caret)
library(doParallel)
cl <- makeCluster(2)
registerDoParallel(cl)
fitControl <- trainControl(## 10-fold CV
method = "repeatedcv",
number = 10,
## repeated ten times
repeats = 10)
training <- training[,c("pitch_forearm","yaw_belt","magnet_dumbbell_z","pitch_belt","magnet_dumbbell_y","accel_belt_z","roll_forearm","magnet_belt_y","roll_dumbbell","accel_dumbbell_y","classe")]
trrf <- train(classe ~ ., data = training, method = "bstTree")#input$method)
trrf <- train(classe ~ ., data = training, method = "bstTree")#input$method)
trrf <- train(classe ~ ., data = training, method = "xyf")#input$method)
trrf
trrf <- train(classe ~ ., data = training, method = "bstTree")#input$method)
shiny::runApp()
shiny::runApp()
shiny::runApp()
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='jugi92', token='AF8343C3DE0F1A4235AE17E5BBE08A1D', secret='UsFsm5F4efNI4GtEjuTlYRtWZ4xAgsqYFfsW9nPE')
library(shinyapps)
shinyapps::deployApp()
`pml-training` <- read.csv("C:\\Users\\U538946\\AppData\\Local\\Temp\\Rtmp0KywdH\\data30ec3be211a1")
View(`pml-training`)
training <- read.table.url("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv", header = T)
training <- read.csv(url("https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"))
shinyapps::deployApp()
shiny::runApp()
shinyapps::deployApp()
shinyapps::deployApp()
shinyapps::deployApp()
shiny::runApp()
training <- read.csv("pml-training.csv")
testing <- read.csv("pml-testing.csv")
set.seed(123)
#reduce the number of samples to reduce the computing time
trainingind <- sample(x = 1:nrow(training), size = 2000, replace = F)
training <- training[trainingind,]
cntr <- colnames(training)
cnte <- colnames(testing)
cntr[which(!cntr %in% cnte)]
cnte[which(!cnte %in% cntr)]
training <- training[, -seq(from = 1, to = 8, by = 1)]
testing <- testing[, -seq(from = 1, to = 8, by = 1)]
training <- training[,colSums(is.na(testing)) < nrow(testing)]
testing <- testing[,colSums(is.na(testing)) < nrow(testing)]
library(caret)
# library(doParallel)
training <- training[,c("pitch_forearm","yaw_belt","magnet_dumbbell_z","pitch_belt","magnet_dumbbell_y","accel_belt_z","roll_forearm","magnet_belt_y","roll_dumbbell","accel_dumbbell_y","classe")]
trrf <- train(classe ~ ., data = training, method = "rf")#input$method)
plot(trrf)
varImp(trrf)
shiny::runApp()
View(training)
shinyapps::deployApp()
shinyapps::deployApp()
install.packages("quantreg")
shinyapps::deployApp()
install.packages("lme4")
shinyapps::deployApp()
shinyapps::deployApp()
shinyapps::deployApp()
shinyapps::deployApp()
print(shinyapps::deployApp())
?shinyapps::deployApp()
?deployApp()
deployApp()
library(shinyapps)
deployApp()
deployApp(appName = "dataprod1")
